{"version":3,"sources":["components/Connector.js","components/Location.js","App.js","index.js"],"names":["props","initialCount","count","useState","activeCount","setActiveCount","handleClick","e","preventDefault","type","onClick","onContextMenu","className","label","Array","map","i","statuses","push","status","setStatus","length","width","height","viewBox","xmlns","d","App","connector","Connector","dungeon","dropdown","Location","location","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc2f4078.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default (props) => {\r\n\r\n    // Total number of icons\r\n    const initialCount = props.count\r\n\r\n    // State storing currently active icons\r\n    const [activeCount, setActiveCount] = useState(initialCount)\r\n\r\n    // Handle clicks\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Left clicks\r\n        if (e.type === 'click' && activeCount > 0) {\r\n            setActiveCount(activeCount - 1)\r\n        }\r\n        \r\n        // Right clicks\r\n        if (e.type === 'contextmenu' && activeCount < initialCount) {\r\n            setActiveCount(activeCount + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <button onClick={handleClick} onContextMenu={handleClick} className={activeCount > 0 ? 'incomplete' : 'complete'}>\r\n\r\n            <div className=\"label\">\r\n                {props.label}\r\n            </div>\r\n\r\n            <div className=\"icon\">\r\n                {[...Array(initialCount)].map((e, i) => {\r\n                    return <div className={i < activeCount ? 'connector-indicator undiscovered' : 'connector-indicator discovered'} key={i}></div>\r\n                })}\r\n            </div>\r\n            \r\n        </button>\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default (props) => {\r\n\r\n    // Available statuses\r\n    const statuses = ['Undiscovered', 'Discovered']\r\n\r\n    // Additional statuses for dropdowns\r\n    if (props.type == \"dropdown\") {\r\n        statuses.push('Lumberjack', 'Pyramid')\r\n    }\r\n\r\n    // State storing current status\r\n    const [status, setStatus] = useState(0)\r\n\r\n    // Handle clicks\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Left clicks\r\n\r\n        if (e.type === 'click' && status < statuses.length - 1) {\r\n            setStatus(status + 1)\r\n        }\r\n\r\n        if (e.type === 'click' && status === statuses.length - 1) {\r\n            setStatus(0)\r\n        }\r\n\r\n        // Right clicks\r\n\r\n        if (e.type === 'contextmenu' && status > 0) {\r\n            setStatus(status - 1)\r\n        }\r\n\r\n        if (e.type === 'contextmenu' && status === 0) {\r\n            setStatus(statuses.length - 1)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <button onClick={handleClick} onContextMenu={handleClick} className={status == 1 ? 'complete' : 'incomplete'}>\r\n\r\n            <div className=\"label\">\r\n                {props.label}\r\n            </div>\r\n\r\n            <div className=\"icon\">\r\n                {status == 0 &&\r\n                    <svg className=\"visibility-indicator incomplete\" width=\"12\" height=\"16\" viewBox=\"0 0 12 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M5.76348 11.6208L6.16265 9.95719H6.63666C8.6325 9.95719 12.0005 8.88073 12.0005 5.08869C12.0005 2.25076 10.2791 0 6.03791 0C1.67201 0 0.000488281 2.34862 0.000488281 5.50459H2.64498C2.64498 3.47401 3.6928 2.27523 6.1377 2.27523C8.40797 2.27523 9.3061 3.5474 9.3061 5.08869C9.3061 6.97248 8.03375 7.90214 5.48905 7.95107H3.49321V11.6208H5.76348ZM4.66577 16C5.78843 16 6.56182 15.682 6.56182 14.4098C6.56182 13.1376 5.78843 12.8685 4.66577 12.8685C3.51816 12.8685 2.69487 13.1376 2.69487 14.4098C2.69487 15.682 3.51816 16 4.66577 16Z\" />\r\n                    </svg>\r\n                }\r\n                {status == 1 &&\r\n                    <svg className=\"visibility-indicator complete\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M2.12187 0.707076C1.73136 0.316564 1.0982 0.316568 0.707671 0.707063V0.707063C0.317119 1.09758 0.317085 1.73078 0.707618 2.12132L5.87908 7.29284C6.2696 7.68336 6.26961 8.31652 5.87909 8.70704L0.707604 13.8786C0.317077 14.2691 0.317116 14.9023 0.707654 15.2928V15.2928C1.09818 15.6833 1.73137 15.6834 2.12189 15.2928L7.29338 10.1213C7.68391 9.73077 8.31707 9.73077 8.7076 10.1213L13.8791 15.2928C14.2696 15.6833 14.9028 15.6833 15.2933 15.2928V15.2928C15.6839 14.9023 15.6839 14.2691 15.2934 13.8786L10.1219 8.70704C9.73137 8.31652 9.73137 7.68336 10.1219 7.29284L15.2934 2.12132C15.6839 1.73079 15.6839 1.09758 15.2933 0.707063V0.707063C14.9028 0.316568 14.2696 0.316565 13.8791 0.707077L8.7076 5.87859C8.31707 6.26911 7.6839 6.26911 7.29338 5.87859L2.12187 0.707076Z\" />\r\n                    </svg>\r\n                }\r\n                {status == 2 &&\r\n                    <svg className=\"visibility-indicator incomplete\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M16.0005 6C16.0005 9.1261 14.8169 11.6966 13.3013 12C13.3013 12 8.82837 9.46869 5 9.05646V16H3V9H0V3H3V0H5V2.9436C8.82861 2.53143 13.3013 0 13.3013 0C14.8169 0.303406 16.0005 2.8739 16.0005 6Z\" />\r\n                    </svg>\r\n                }\r\n                {status == 3 &&\r\n                    <svg className=\"visibility-indicator incomplete\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M0 16H16L8 0L0 16Z\" />\r\n                    </svg>\r\n                }\r\n            </div>\r\n            \r\n        </button>\r\n\r\n    )\r\n}\r\n","import './App.css';\nimport Connector from './components/Connector'\nimport Location from './components/Location'\n\nfunction App() {\n\n    const connectors = [\n        { label: 'Bumper Cave', count: 2 },\n        { label: 'Elder House', count: 2 },\n        { label: 'Fairy Ascen.', count: 2 },\n        { label: 'Hooksh. Cave', count: 2 },\n        { label: 'Old Man Rescue', count: 2 },\n        { label: 'Mount. S&Q', count: 2 },\n        { label: 'Return Cave', count: 2 },\n        { label: 'Spiral Cave', count: 2 },\n        { label: 'Super-bunny', count: 2 },\n        { label: 'Two Brothers', count: 2 },\n        { label: 'Paradox Cave', count: 3 },\n        { label: 'Spec. Rock', count: 3 }\n    ]\n\n    const dungeons = [\n        { label: 'Desert Palace', count: 3 },\n        { label: 'Hyrule Castle', count: 3 },\n        { label: 'Turtle Rock', count: 4 },\n    ]\n\n    const dropdowns = [\n        { label: 'Back of Escape' },\n        { label: 'Ganon' },\n        { label: 'Kakariko Well' },\n        { label: 'Lost Woods' },\n        { label: 'Lumber-jack' },\n        { label: 'Magic Bat' },\n        { label: 'Uncle' },\n        { label: 'Useless Fairy' },\n    ]\n\n    const itemLocations = [\n        { label: 'Blind’s Hut' },\n        { label: 'Hype Cave' },\n        { label: 'Mini Moldorm' },\n        { label: 'Saha’s Closet' }\n    ]\n\n    return (\n        <>\n\n            <h2>Entrance connectors</h2>\n\n            <div className=\"button-group connectors\">\n                {connectors.map((connector, i) =>\n                    <Connector label={connector.label} count={connector.count} key={i} />\n                )}\n            </div>\n\n            <h2>Dungeon connectors</h2>\n\n            <div className=\"button-group dungeons\">\n                {dungeons.map((dungeon, i) =>\n                    <Connector label={dungeon.label} count={dungeon.count} key={i} />\n                )}\n            </div>\n\n            <h2>Dropdowns</h2>\n\n            <div className=\"button-group dropdowns\">\n                {dropdowns.map((dropdown, i) =>\n                    <Location type=\"dropdown\" label={dropdown.label} key={i} />\n                )}\n            </div>\n\n            <h2>High value item locations</h2>\n\n            <div className=\"button-group item-locations\">\n                {itemLocations.map((location, i) =>\n                    <Location label={location.label} key={i} />\n                )}\n            </div>\n\n\n\n        </>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}