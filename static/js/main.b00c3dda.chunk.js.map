{"version":3,"sources":["components/Category.js","components/Connector.js","components/Footer.js","components/Location.js","App.js","index.js"],"names":["props","useState","visibility","setVisibility","motion","section","className","initial","animate","variants","visible","hidden","onClick","width","height","viewBox","xmlns","y","d","heading","div","opacity","children","initialCount","count","activeCount","setActiveCount","handleClick","e","preventDefault","type","onContextMenu","label","Array","map","i","href","target","rel","fill","statuses","push","status","setStatus","length","App","MotionConfig","transition","Category","connector","Connector","dungeon","dropdown","Location","location","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b00c3dda.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { motion } from 'framer-motion'\r\n\r\nexport default (props) => {\r\n\r\n    // State storing whether .category-inner is visible or collapsed\r\n    const [visibility, setVisibility] = useState(true)\r\n\r\n    // Motion variants for section\r\n    const sectionVariants = {\r\n        visible: { \"margin-bottom\": \"1em\" },\r\n        hidden: { \"margin-bottom\": 0 }\r\n    }\r\n\r\n    // Motion variants for .category-inner\r\n    const innerVariants = {\r\n        visible: { height: \"auto\", opacity: 1 },\r\n        hidden: { height: 0, opacity: 0 }\r\n    }\r\n\r\n    return (\r\n        <motion.section\r\n            className={visibility ? 'category' : 'category hidden' }\r\n            initial=\"visible\"\r\n            animate={visibility ? 'visible' : 'hidden'}\r\n            variants={sectionVariants}\r\n        >\r\n\r\n            <h2 onClick={() => visibility ? setVisibility(false) : setVisibility(true)}>\r\n                <div className=\"category-visibility-icon\">\r\n                    {visibility ?\r\n                        <svg width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <rect y=\"3\" width=\"8\" height=\"2\" />\r\n                        </svg>\r\n                    :\r\n                        <svg width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M5 3V0H3V3H0V5H3V8H5V5H8V3H5Z\" />\r\n                        </svg>\r\n                    }\r\n                </div>\r\n                {props.heading}\r\n            </h2>\r\n\r\n            <motion.div\r\n                className=\"category-inner\"\r\n                initial=\"visible\"\r\n                animate={visibility ? 'visible' : 'hidden'}\r\n                variants={innerVariants}\r\n            >\r\n                {props.children}\r\n            </motion.div>\r\n\r\n        </motion.section>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nexport default (props) => {\r\n\r\n    // Total number of icons\r\n    const initialCount = props.count\r\n\r\n    // State storing currently active icons\r\n    const [activeCount, setActiveCount] = useState(initialCount)\r\n\r\n    // Handle clicks\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Left clicks\r\n        if (e.type === 'click' && activeCount > 0) {\r\n            setActiveCount(activeCount - 1)\r\n        }\r\n        \r\n        // Right clicks\r\n        if (e.type === 'contextmenu' && activeCount < initialCount) {\r\n            setActiveCount(activeCount + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <button onClick={handleClick} onContextMenu={handleClick} className={activeCount > 0 ? 'incomplete' : 'complete'}>\r\n\r\n            <div className=\"label\">\r\n                {props.label}\r\n            </div>\r\n\r\n            <div className=\"icon\">\r\n                {[...Array(initialCount)].map((e, i) => {\r\n                    return <div className={i < activeCount ? 'connector-indicator undiscovered' : 'connector-indicator discovered'} key={i}></div>\r\n                })}\r\n            </div>\r\n            \r\n        </button>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <footer>\r\n            <a href=\"https://github.com/aarshap/alttpr-entrance-helper/tree/master\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <svg width=\"24\" height=\"23\" viewBox=\"0 0 24 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M12 0C5.374 0 0 5.2793 0 11.7907C0 17.0003 3.438 21.4198 8.207 22.9791C8.806 23.0882 9 22.7227 9 22.4122V20.2172C5.662 20.9305 4.967 18.8259 4.967 18.8259C4.421 17.463 3.634 17.1005 3.634 17.1005C2.545 16.3685 3.717 16.3842 3.717 16.3842C4.922 16.4667 5.556 17.5996 5.556 17.5996C6.626 19.4016 8.363 18.8809 9.048 18.5792C9.155 17.8177 9.466 17.297 9.81 17.0032C7.145 16.7035 4.343 15.6925 4.343 11.1756C4.343 9.8875 4.812 8.83617 5.579 8.01081C5.455 7.7131 5.044 6.51339 5.696 4.8902C5.696 4.8902 6.704 4.57382 8.997 6.09875C9.954 5.83739 10.98 5.70671 12 5.7018C13.02 5.70671 14.047 5.83739 15.006 6.09875C17.297 4.57382 18.303 4.8902 18.303 4.8902C18.956 6.51438 18.545 7.71408 18.421 8.01081C19.191 8.83617 19.656 9.88849 19.656 11.1756C19.656 15.7043 16.849 16.7016 14.177 16.9934C14.607 17.3589 15 18.0762 15 19.1766V22.4122C15 22.7256 15.192 23.0941 15.801 22.9782C20.566 21.4169 24 16.9983 24 11.7907C24 5.2793 18.627 0 12 0Z\" />\r\n                </svg>\r\n            </a>\r\n            <span>\r\n                An <a href=\"https://alttpr.com\" target=\"_blank\" rel=\"noopener noreferrer\">ALTTPR</a> entrance randomizer tool by your friend <a href=\"https://twitch.tv/okayaaron\" target=\"_blank\" rel=\"noopener noreferrer\">Aaron</a>\r\n            </span>\r\n        </footer>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react'\r\n\r\nexport default (props) => {\r\n\r\n    // Available statuses\r\n    const statuses = ['Undiscovered', 'Discovered']\r\n\r\n    // Additional statuses for dropdowns\r\n    if (props.type === \"dropdown\") {\r\n        statuses.push('Lumberjack', 'Pyramid')\r\n    }\r\n\r\n    // State storing current status\r\n    const [status, setStatus] = useState(0)\r\n\r\n    // Handle clicks\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Left clicks\r\n\r\n        if (e.type === 'click' && status < statuses.length - 1) {\r\n            setStatus(status + 1)\r\n        }\r\n\r\n        if (e.type === 'click' && status === statuses.length - 1) {\r\n            setStatus(0)\r\n        }\r\n\r\n        // Right clicks\r\n\r\n        if (e.type === 'contextmenu' && status > 0) {\r\n            setStatus(status - 1)\r\n        }\r\n\r\n        if (e.type === 'contextmenu' && status === 0) {\r\n            setStatus(statuses.length - 1)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <button onClick={handleClick} onContextMenu={handleClick} className={status === 1 ? 'complete' : 'incomplete'}>\r\n\r\n            <div className=\"label\">\r\n                {props.label}\r\n            </div>\r\n\r\n            <div className=\"icon\">\r\n                {status === 0 &&\r\n                    <svg className=\"visibility-indicator incomplete\" width=\"12\" height=\"16\" viewBox=\"0 0 12 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M5.76348 11.6208L6.16265 9.95719H6.63666C8.6325 9.95719 12.0005 8.88073 12.0005 5.08869C12.0005 2.25076 10.2791 0 6.03791 0C1.67201 0 0.000488281 2.34862 0.000488281 5.50459H2.64498C2.64498 3.47401 3.6928 2.27523 6.1377 2.27523C8.40797 2.27523 9.3061 3.5474 9.3061 5.08869C9.3061 6.97248 8.03375 7.90214 5.48905 7.95107H3.49321V11.6208H5.76348ZM4.66577 16C5.78843 16 6.56182 15.682 6.56182 14.4098C6.56182 13.1376 5.78843 12.8685 4.66577 12.8685C3.51816 12.8685 2.69487 13.1376 2.69487 14.4098C2.69487 15.682 3.51816 16 4.66577 16Z\" />\r\n                    </svg>\r\n                }\r\n                {status === 1 &&\r\n                    <svg className=\"visibility-indicator complete\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M2.12187 0.707076C1.73136 0.316564 1.0982 0.316568 0.707671 0.707063V0.707063C0.317119 1.09758 0.317085 1.73078 0.707618 2.12132L5.87908 7.29284C6.2696 7.68336 6.26961 8.31652 5.87909 8.70704L0.707604 13.8786C0.317077 14.2691 0.317116 14.9023 0.707654 15.2928V15.2928C1.09818 15.6833 1.73137 15.6834 2.12189 15.2928L7.29338 10.1213C7.68391 9.73077 8.31707 9.73077 8.7076 10.1213L13.8791 15.2928C14.2696 15.6833 14.9028 15.6833 15.2933 15.2928V15.2928C15.6839 14.9023 15.6839 14.2691 15.2934 13.8786L10.1219 8.70704C9.73137 8.31652 9.73137 7.68336 10.1219 7.29284L15.2934 2.12132C15.6839 1.73079 15.6839 1.09758 15.2933 0.707063V0.707063C14.9028 0.316568 14.2696 0.316565 13.8791 0.707077L8.7076 5.87859C8.31707 6.26911 7.6839 6.26911 7.29338 5.87859L2.12187 0.707076Z\" />\r\n                    </svg>\r\n                }\r\n                {status === 2 &&\r\n                    <svg className=\"visibility-indicator incomplete\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M16.0005 6C16.0005 9.1261 14.8169 11.6966 13.3013 12C13.3013 12 8.82837 9.46869 5 9.05646V16H3V9H0V3H3V0H5V2.9436C8.82861 2.53143 13.3013 0 13.3013 0C14.8169 0.303406 16.0005 2.8739 16.0005 6Z\" />\r\n                    </svg>\r\n                }\r\n                {status === 3 &&\r\n                    <svg className=\"visibility-indicator incomplete\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M5 16H0L2 12H5V16Z\" />\r\n                        <path d=\"M7 16H16L14 12H7V16Z\" />\r\n                        <path d=\"M13 10L11.5 7H9V10H13Z\" />\r\n                        <path d=\"M10.5 5L8 0L5.5 5H10.5Z\" />\r\n                        <path d=\"M4.5 7L3 10H7V7H4.5Z\" />\r\n                    </svg>\r\n                }\r\n            </div>\r\n            \r\n        </button>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { MotionConfig } from 'framer-motion';\r\nimport './App.css';\r\nimport Category from './components/Category'\r\nimport Connector from './components/Connector'\r\nimport Footer from './components/Footer'\r\nimport Location from './components/Location'\r\n\r\nfunction App() {\r\n\r\n    // Entrance connector data\r\n\r\n    const connectors = [\r\n        { label: 'Bumper Cave', count: 2 },\r\n        { label: 'Elder House', count: 2 },\r\n        { label: 'Fairy Ascen.', count: 2 },\r\n        { label: 'Hooksh. Cave', count: 2 },\r\n        { label: 'Old Man Rescue', count: 2 },\r\n        { label: 'Mount. S&Q', count: 2 },\r\n        { label: 'Return Cave', count: 2 },\r\n        { label: 'Spiral Cave', count: 2 },\r\n        { label: 'Super-bunny', count: 2 },\r\n        { label: 'Two Brothers', count: 2 },\r\n        { label: 'Paradox Cave', count: 3 },\r\n        { label: 'Spec. Rock', count: 3 }\r\n    ]\r\n\r\n    // Dungeon connector data\r\n\r\n    const dungeons = [\r\n        { label: 'Desert Palace', count: 3 },\r\n        { label: 'Hyrule Castle', count: 3 },\r\n        { label: 'Turtle Rock', count: 4 },\r\n    ]\r\n\r\n    // Dropdown data\r\n\r\n    const dropdowns = [\r\n        { label: 'Back of Escape' },\r\n        { label: 'Ganon' },\r\n        { label: 'Kakariko Well' },\r\n        { label: 'Lost Woods' },\r\n        { label: 'Lumber-jack' },\r\n        { label: 'Magic Bat' },\r\n        { label: 'Uncle' },\r\n        { label: 'Useless Fairy' },\r\n    ]\r\n\r\n    // High value item location data\r\n\r\n    const itemLocations = [\r\n        { label: 'Blind’s Hut' },\r\n        { label: 'Hype Cave' },\r\n        { label: 'Mini Moldorm' },\r\n        { label: 'Saha’s Closet' }\r\n    ]\r\n\r\n    return (\r\n\r\n        // Sets all Motion animations in the app to use the \"tween\" type\r\n\r\n        <MotionConfig transition={{ type: \"tween\" }}>\r\n\r\n            <div className=\"container\">\r\n\r\n                <main>\r\n\r\n                    <Category heading=\"Entrance connectors\">\r\n                        <div className=\"button-group connectors\">\r\n                            {connectors.map((connector, i) =>\r\n                                <Connector label={connector.label} count={connector.count} key={i} />\r\n                            )}\r\n                        </div>\r\n                    </Category>\r\n\r\n                    <Category heading=\"Dungeon connectors\">\r\n                        <div className=\"button-group dungeons\">\r\n                            {dungeons.map((dungeon, i) =>\r\n                                <Connector label={dungeon.label} count={dungeon.count} key={i} />\r\n                            )}\r\n                        </div>\r\n                    </Category>\r\n\r\n                    <Category heading=\"Dropdowns\">\r\n                        <div className=\"button-group dropdowns\">\r\n                            {dropdowns.map((dropdown, i) =>\r\n                                <Location type=\"dropdown\" label={dropdown.label} key={i} />\r\n                            )}\r\n                        </div>\r\n                    </Category>\r\n\r\n                    <Category heading=\"High value item locations\">\r\n                        <div className=\"button-group item-locations\">\r\n                            {itemLocations.map((location, i) =>\r\n                                <Location label={location.label} key={i} />\r\n                            )}\r\n                        </div>\r\n                    </Category>\r\n\r\n                </main>\r\n\r\n                <Footer />\r\n\r\n            </div>\r\n\r\n        </MotionConfig>\r\n\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}